(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{208:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),s("p",[t._v("First, add the NuGet package to your project:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("dotnet add package RestSharp\n")])])]),s("h2",{attrs:{id:"basic-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage"}},[t._v("#")]),t._v(" Basic Usage")]),t._v(" "),s("p",[t._v("If you only have a small number of one-off requests to make to an API, you can use RestSharp like so:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" RestSharp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" RestSharp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authenticators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.twitter.com/1.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authenticator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpBasicAuthenticator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statuses/home_timeline.json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DataFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("IRestResponse")]),t._v(" contains all of the information returned from the remote server.\nYou have access to the headers, content, HTTP status and more.")]),t._v(" "),s("p",[t._v("It is recommended that you use the generic overloads like "),s("code",[t._v("Get<T>")]),t._v(" to automatically deserialize the response into .NET classes.")]),t._v(" "),s("h2",{attrs:{id:"asynchronous-calls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-calls"}},[t._v("#")]),t._v(" Asynchronous Calls")]),t._v(" "),s("p",[t._v("All synchronous methods have their asynchronous siblings, suffixed with "),s("code",[t._v("Async")]),t._v(".")]),t._v(" "),s("p",[t._v("So, instead of "),s("code",[t._v("Get<T>")]),t._v(" that returns "),s("code",[t._v("T")]),t._v(" or "),s("code",[t._v("Execute<T>")]),t._v(", which returns "),s("code",[t._v("IRestResponse<T>")]),t._v(",\nyou can use "),s("code",[t._v("GetAsync<T>")]),t._v(" and "),s("code",[t._v("ExecuteAsync<T>")]),t._v(". The arguments set is usually identical.\nYou can optionally supply the cancellation token, which by default is set to "),s("code",[t._v("CancellationToken.None")]),t._v(".")]),t._v(" "),s("p",[t._v("For example:")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" RestSharp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" RestSharp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authenticators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.twitter.com/1.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nclient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authenticator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpBasicAuthenticator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statuses/home_timeline.json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DataFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeTimeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cancellationToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The most important difference, however, that async methods that are named after\nHTTP methods return the "),s("code",[t._v("Task<T>")]),t._v(" instead of "),s("code",[t._v("Task<IRestResponse<T>>")]),t._v(". Because it\nmeans that you won't get an error response if the request fails, those methods\nthrow an exception.")]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("ExecuteAsync")]),t._v(" overloads, however, behave in the same way as "),s("code",[t._v("Execute")]),t._v(" and return\nthe "),s("code",[t._v("IRestResponse")]),t._v(" or "),s("code",[t._v("IRestResponse<T>")]),t._v(".")]),t._v(" "),s("p",[t._v("See below about how RestSharp handles exceptions.")]),t._v(" "),s("h2",{attrs:{id:"note-about-error-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#note-about-error-handling"}},[t._v("#")]),t._v(" Note About Error Handling")]),t._v(" "),s("p",[t._v("If there is a network transport error (network is down, failed DNS lookup, etc), "),s("code",[t._v("RestResponse.ResponseStatus")]),t._v(" will be set to "),s("code",[t._v("ResponseStatus.Error")]),t._v(", otherwise it will be "),s("code",[t._v("ResponseStatus.Completed")]),t._v(".")]),t._v(" "),s("p",[t._v("If an API returns a 404, "),s("code",[t._v("ResponseStatus")]),t._v(" will still be "),s("code",[t._v("Completed")]),t._v(". If you need access to the HTTP status code returned you will find it at "),s("code",[t._v("RestResponse.StatusCode")]),t._v(".\nThe "),s("code",[t._v("Status")]),t._v(" property is an indicator of completion independent of the API error handling.")]),t._v(" "),s("p",[t._v("Normally, RestSharp doesn't throw an exception if the request fails.")]),t._v(" "),s("p",[t._v("However, it is possible to configure RestSharp to throw in different situations, when it normally doesn't throw\nin favour of giving you the error as a property.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Property")]),t._v(" "),s("th",[t._v("Behavior")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("FailOnDeserialization")]),t._v(" "),s("td",[t._v("Changes the default behavior when failed deserialization results in a successful response with an empty "),s("code",[t._v("Data")]),t._v(" property of the response. Setting this property to "),s("code",[t._v("true")]),t._v(" will tell RestSharp to consider failed deserialization as an error and set the "),s("code",[t._v("ResponseStatus")]),t._v(" to "),s("code",[t._v("Error")]),t._v(" accordingly.")])]),t._v(" "),s("tr",[s("td",[t._v("ThrowOnDeserialization")]),t._v(" "),s("td",[t._v("Changes the default behavior when failed deserialization results in empty "),s("code",[t._v("Data")]),t._v(" property of the response. Setting this property to "),s("code",[t._v("true")]),t._v(" will tell RestSharp to throw when deserialization fails.")])]),t._v(" "),s("tr",[s("td",[t._v("ThrowOnAnyError")]),t._v(" "),s("td",[t._v("Setting this property to "),s("code",[t._v("true")]),t._v(" changes the default behavior and forces RestSharp to throw if any errors occurs when making a request or during deserialization.")])])])]),t._v(" "),s("p",[t._v("There are also slight differences on how different overloads handle exceptions.")]),t._v(" "),s("p",[t._v("Asynchronous generic methods "),s("code",[t._v("GetAsync<T>")]),t._v(", "),s("code",[t._v("PostAsync<T>")]),t._v(" and so on, which aren't a part of "),s("code",[t._v("IRestClient")]),t._v(" interface\n(those methods are extension methods) return "),s("code",[t._v("Task<T>")]),t._v(". It means that there's no "),s("code",[t._v("IRestResponse")]),t._v(" to set the response status to error.\nWe decided to throw an exception when such a request fails. It is a trade-off between the API\nconsistency and usability of the library. Usually, you only need the content of "),s("code",[t._v("RestResponse")]),t._v(" instance to diagnose issues\nand most of the time the exception would tell you what's wrong.")])])}),[],!1,null,null,null);e.default=n.exports}}]);